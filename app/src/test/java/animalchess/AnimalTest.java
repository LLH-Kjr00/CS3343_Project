/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package animalchess;

import animalchess.animals.Animal;
import animalchess.board.Board;
import animalchess.exceptions.InvalidMovementException;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class AnimalTest {

    @Test
    public void test_ValidMove1() throws InvalidMovementException {

        Board board = Board.getInstance();
        Animal dog = board.getTarget(5,1);
//        Exception exception = assertThrows(Exception.class,()->dog.checkIsValidMove(7,1),"you cannot move more than one block.");
        Exception exception = assertThrows(Exception.class,()->dog.checkIsValidMove(7,1));
        assertEquals("you cannot move more than one block.",exception.getMessage());
    }

//    @Test
//    public void test_ValidMove1() throws InvalidMovementException {
//
//        Board board = Board.getInstance();
//        Animal Lion = board.getTarget(0,8);
//        Exception exception = assertThrows(Exception.class,()->Lion.checkIsValidMove(0,5),"you cannot move more than one block.");
//        assertEquals("you cannot move more than one block.",exception.getMessage());
//    }

    @Test
    public void test_ValidMove2() throws InvalidMovementException {

        Board board = Board.getInstance();
        Animal dog = board.getTarget(5,1);
        Exception exception = assertThrows(Exception.class,()->dog.checkIsValidMove(5,5),"you cannot move more than one block.");
        assertEquals("you cannot move more than one block.",exception.getMessage());
    }

    @Test
    public void test_ValidMove3() throws InvalidMovementException {

        Board board = Board.getInstance();
        Animal dog = board.getTarget(5,1);
        Exception exception = assertThrows(Exception.class,()->dog.checkIsValidMove(5,1),"you cannot move into origin location.");
        assertEquals("you cannot move into origin location.",exception.getMessage());
    }

    @Test
    public void test_ValidMove4() throws InvalidMovementException {
        Board board = Board.getInstance();
        Animal leopard = board.getTarget(4,2);
        Exception exception = assertThrows(Exception.class,()->leopard.checkIsValidMove(4,3),"this animal cannot go into water.");
        assertEquals("this animal cannot go into water.",exception.getMessage());
    }

    @Test
    public void test_ValidMove5() throws InvalidMovementException {
        Board board = Board.getInstance();
        Animal leopard = board.getTarget(4,2);
        Animal wolf = board.getTarget(2,2);
        wolf.Move(3,2);
        Exception exception = assertThrows(Exception.class,()->leopard.checkIsValidMove(3,2),"you cannot move into friendly units.");
        assertEquals("you cannot move into friendly units.",exception.getMessage());
    }

//    @Test

}
